<script type="text/javascript">
// --------------------------------- Utilities ---------------------------------

// Script for animating background-color
// from http://stackoverflow.com/questions/190560/jquery-animate-backgroundcolor
(function(d){d.each(["backgroundColor","color"],
  function(f,e){d.fx.step[e]=function(g){if(!g.colorInit){g.start=c(g.elem,e);g.end=b(g.end);
    g.colorInit=true}g.elem.style[e]="rgb("+[Math.max(Math.min(parseInt((g.pos*(g.end[0]-
      g.start[0]))+g.start[0]),255),0),Math.max(Math.min(parseInt((g.pos*(g.end[1]-g.start[1]))+
    g.start[1]),255),0),Math.max(Math.min(parseInt((g.pos*(g.end[2]-g.start[2]))+g.start[2]),
      255),0)].join(",")+")"}});function b(f){var e;if(f&&f.constructor==Array&&f.length==3)
  {return f}if(e=/rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(f))
  {return[parseInt(e[1]),parseInt(e[2]),parseInt(e[3])]}
  if(e=/rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(f))
    {return[parseFloat(e[1])*2.55,parseFloat(e[2])*2.55,parseFloat(e[3])*2.55]}
  if(e=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(f)){return[parseInt(e[1],16)
    ,parseInt(e[2],16),parseInt(e[3],16)]}
    if(e=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(f)){
      return[parseInt(e[1]+e[1],16),parseInt(e[2]+e[2],16),parseInt(e[3]+e[3],16)]}
      if(e=/rgba\(0, 0, 0, 0\)/.exec(f)){return a.transparent}return a[d.trim(f).toLowerCase()]}
        function c(g,e){var f;do{f=d.css(g,e);if(f!=""&&f!="transparent"||d.nodeName(g,"body"))
      {break}e="backgroundColor"}while(g=g.parentNode);return b(f)}var a={transparent:[255,255,255]}})(jQuery);

function numberWithDelimiter(val) {
  while (/(\d+)(\d{3})/.test(val.toString())) {
    val = val.toString().replace(/(\d+)(\d{3})/, '$1'+','+'$2');
  }
  return val;
}

// --------------------------------- Views ---------------------------------

function isChecked(id) { // is plus or minus
  return $.inArray(id, checks) != -1; // IE 8 doesn't support .indexOf
}

function isPlus(id) {
  return isChecked(id) && !isMinus(id);
}

function isMinus(id) {
  return $.inArray(id, minuses) != -1;
}

// one and only one of [!isChecked(id), isPlus(id), isMinus(id)] must be true

function initializeViews() {
  for (var i = 0; i < projects.length; ++i) {
    costs[i] = 0;
    (function (i) {
      var id = projects[i].id;

      $('#plus-button' + id).click(function() {
        if (upvotes > 0 && !isPlus(id)) {
          upvotes -= 1;
          if (isMinus(id)) {
            downvotes += 1;
            minuses.splice($.inArray(id, minuses), 1);
          } else {
            checks.push(id);
          }
          costs[i] = 1;
          updateViews();
        }
      });

      $('#minus-button' + id).click(function() {
        if (downvotes > 0 && !isMinus(id)) {
          downvotes -= 1;
          if (isPlus(id)) {
            upvotes += 1;
            minuses.push(id);
          } else {
            checks.push(id);
            minuses.push(id);
          }
          costs[i] = -1;
          updateViews();
        }
      });

      $('#remove-button' + id).click(function() {
        if (isChecked(id)) {
          if (isMinus(id)) {
            minuses.splice($.inArray(id, minuses), 1);
            downvotes += 1;
          } else {
            upvotes += 1;
          }
          checks.splice($.inArray(id, checks), 1);
          costs[i] = 0;
          updateViews();
        }
      });
    })(i);
  }
}

function updateViews() {
  updateList();
  updateSidebar();
  updateTracker();
  updateModal();

  for (var i = 0; i < projects.length; ++i) {
    $('input[name="project[' + projects[i].id + ']"]').val(costs[i]);
  }

  $('#upvotes').html(upvotes);
  $('#downvotes').html(downvotes);
}

function updateList() {
  for (var i = 0; i < projects.length; ++i) {
    var id = projects[i].id;
    var $plusButton = $('#plus-button' + id);
    var $minusButton = $('#minus-button' + id);
    var $removeButton = $('#remove-button' + id);

    if (upvotes <= 0 && !isPlus(id)) {
      $plusButton.addClass('disabled');
      $plusButton.tooltip({
        html: true,
        title: "<span style='font-size: 16px;'><%=j t('plusminus.used_up_upvotes', n_upvotes: conf[:plusminus][:upvotes]).html_safe %></span>",
        animation: false,
        placement: 'top'
      });
    } else {
      $plusButton.removeClass('disabled');
      $plusButton.tooltip('hide');
      $plusButton.tooltip('destroy');
    }

    if (downvotes <= 0 && !isMinus(id)) {
      $minusButton.addClass('disabled');
      $minusButton.tooltip({
        html: true,
        title: "<span style='font-size: 16px;'><%=j t('plusminus.used_up_downvotes', n_downvotes: conf[:plusminus][:downvotes]).html_safe %></span>",
        animation: false,
        placement: 'top'
      });
    } else {
      $minusButton.removeClass('disabled');
      $minusButton.tooltip('hide');
      $minusButton.tooltip('destroy');
    }

    if (isChecked(id)) {
      if (isPlus(id)) {
        $('#project-cell'+id).css('background-color', '#dff0d8');
        $plusButton.addClass('selected-plus-button active');
        $minusButton.removeClass('selected-minus-button active');
      } else {
        $('#project-cell'+id).css('background-color', '#f2dede');
        $plusButton.removeClass('selected-plus-button active');
        $minusButton.addClass('selected-minus-button active');
      }
      $removeButton.show();
    } else {
      $('#project-cell'+id).css('background-color', '#ffffff');
      $('#plus-button' + id).removeClass('selected-plus-button active');
      $('#minus-button' + id).removeClass('selected-minus-button active');
      $removeButton.hide();
    }
  }
}

function updateSidebar() {
  for (var i = 0; i < projects.length; ++i) {
    var id = projects[i].id;
    if (isChecked(id)) {
      if (isMinus(id)) {
        $('#sidebar-item'+id).addClass('danger');
        $('#sidebar-item'+id).removeClass('success');
        $('#sign'+id).html('&minus;');
      } else {
        $('#sidebar-item'+id).addClass('success');
        $('#sidebar-item'+id).removeClass('danger');
        $('#sign'+id).text('+');
      }
      $('#sign'+id).css('visibility', 'visible');
    } else {
      $('#sidebar-item'+id).removeClass('success');
      $('#sidebar-item'+id).removeClass('danger');
      $('#sign'+id).css('visibility', 'hidden');
    }
  }
}

function updateTracker() {
  $('#tracker-remaining-upvotes').text(upvotes);
  $('#tracker-remaining-downvotes').text(downvotes);
}

function updateModal() {
  var plus_s = '', minus_s = '';
  var item = "<%= t('plusminus.confirmation.body.summary.item') %>";
  for (var j = 0; j < checks.length; ++j) {
    var project = projects[idToIndex[checks[j]]];
    var id = project.id;
    var item_s = '<li><b>' + (isMinus(id) ? '&minus;' : '+') + '</b> ' +
      item.replace('%{cost}', numberWithDelimiter(project.cost))
        .replace('%{project}', project.title) + '</li>';
    if (isPlus(id)) {
      plus_s += item_s;
    } else {
      minus_s += item_s;
    }
  }
  var summary_zero = "<%= raw t('plusminus.confirmation.body.summary.zero') %>";
  var summary_upvote = "<%= raw t('plusminus.confirmation.body.summary.upvotes') %>";
  var summary_downvote = "<%= raw t('plusminus.confirmation.body.summary.downvotes') %>";
  var summary = '';
  if (plus_s == '' && minus_s == '') {
    summary = summary_zero;
  } else {
    if (plus_s.length > 0)
      summary += summary_upvote.replace('%{projects}','<ul style="list-style: none; margin-left: 0;">' + plus_s + '</ul>');
    if (minus_s.length > 0)
      summary += summary_downvote.replace('%{projects}','<ul style="list-style: none; margin-left: 0;">' + minus_s + '</ul>');
  }
  $('#confirmation-body').html(summary + " <%=j t('plusminus.confirmation.body.warning').html_safe %>");
}

function showProject(id) {
  window.location.hash = "project" + id;
  $('#project-cell' + id).css('background-color', '#dddddd');
  $('#project-cell' + id).animate({ backgroundColor: isChecked(id) ? (isMinus(id) ? '#f2dede' : '#dff0d8') : '#ffffff'}, 'slow');
}

// --------------------------------- Views ---------------------------------

initializeViews();
updateViews();
</script>
